1.用户分了custom，manager
manager 是不是应该有个客户端，还是和custom一样提供一个web
访问的接口
web

2桌子状态的确定
类图里面有个状态机，因为状态是跟时间相关的，所以不是数据库的字段，而是根据reservation的情况确定某一个时间的桌子状态

3.reservation的状态
比如预定的10点，但是时间到了，人没来，系统应该知道这种情况，把这个订单的信息给出来，再让manager联系custom，决定是延时还是取消订单

4.餐馆的dish和营业时间应该是admin可以设置的，餐馆自己设置
直接影响到定位置的时候，桌子是不是被约定
比如定义10点到2点是午餐，那么10点，1号桌被约定，这一天10点到2点之间的1号桌都应该不能再被别人预定，还要根据人数，需要排除桌子的算法


5.网站提供delivery和reservation，提供一致的用户界面

6.系统用户有custom，manager，admin所以数据库要记录用户身份，登录时如何判断用户身份，直接影响到实例化哪一个类的对象，获得什么service，结合类图看
登录时查数据库的字段，以后，用户类型的对象存session来判断
user里存custom，manager；admin另外一张表

7.用户名登录框和搜索框的自动补全功能，就是输入头几个，实时查数据库，把符合的列出来可以给用户选
已经可以实现，有现成的Ajax控件

8.系统是B/s3层结构的，就是类图里面三个包，呈现层就是客户端页面，应用层就好似服务器端代码，c#的，数据层访问全部写成sqlserver存储过程，中间用LINQ从应用层访问存储过程
要强调linq，屏蔽了数据访问的细节，比如连接字符串什么的，使得存储过程的调用跟调用c#代码一样

9.推荐dish的是后根据dish的popularity，和用户history，给出recommendation
这个可以问老师应该怎么给推荐dish

